generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String   @unique
  role      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Process {
  id               String   @id @default(uuid())
  numberProcess    String
  forumName        String
  courtName        String
  courtNumber      String
  author           String
  defendantName    String
  processStatus    String? 
  status           ProcessStatus 
  pending          String?
  note             String?
  processDate      String
  partner          String
  department       String
  processOutcome   ProcessOutcome
  value            Float
  portion          Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  finance          Finance? 
  paymentProcess  PaymentProcess?

  @@map("processes")
}

model Finance {
  processId String   @id 
  value     Float
  portion   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  process   Process  @relation(fields: [processId], references: [id], onDelete: Cascade)

  @@map("finances")
}

model PaymentProcess {
  processId String @id
  paidAmount Float
  paidPortion Int
  paidDate String

  process   Process  @relation(fields: [processId], references: [id], onDelete: Cascade)

  @@map("payment_process")
}

enum ProcessStatus {
  available
  archived
  processing
}

enum ProcessOutcome {
  won
  lost
  undefined
}

model Petition {
  id            String @id @default(uuid())
  author        String
  defendantName String
  processType   String
  partner       String
    @@map("petition")
}
